{"version":3,"sources":["components/Input/input.module.css","components/answer/answer.module.css","App.module.css","components/answer/Answer.tsx","components/Input/Input.tsx","redux/reducers.ts","App.tsx","redux/store.ts","index.tsx"],"names":["module","exports","Answer","props","className","style","textWrap","text","image","src","urlPhoto","Input","state","changeInput","checkCurrentValue","clear","checkBlock","answer","check","error","label","input","type","placeholder","value","currentValue","onChange","e","id","target","btnBlock","onClick","touch","initialState","inputs","checkCode","actions","inputId","mapDispatchToProps","connector","connect","sherlock","page","watson","hudson","hooper","lestrade","moriarty","adler","mary","mycroft","anderson","header","linkBlock","link","to","main","contentWrap","content","path","render","rootReducer","combineReducers","action","map","i","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cd5aa4b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"input_label__2GcVG\",\"input\":\"input_input__1q9nW\",\"btnBlock\":\"input_btnBlock__1ksnZ\",\"answer\":\"input_answer__2DVoe\",\"error\":\"input_error__3IEXT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"answer_image__1AhVG\",\"textWrap\":\"answer_textWrap__396Q4\",\"text\":\"answer_text__E1pit\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__1qOy5\",\"linkBlock\":\"App_linkBlock__3QSqI\",\"link\":\"App_link__14Kcu\",\"main\":\"App_main__Dsluq\",\"content\":\"App_content__2qbGl\",\"contentWrap\":\"App_contentWrap__2h2qM\"};","import React, {FC} from 'react';\r\nimport style from './answer.module.css';\r\n\r\ntype propsType = {\r\n    urlPhoto: string\r\n}\r\n\r\nconst Answer: FC<propsType> = (props) => {\r\n    return <>\r\n        <div className={style.textWrap}>\r\n            <div className={style.text}>Ура!</div>\r\n        </div>\r\n        <img className={style.image} src={props.urlPhoto} />\r\n    </>\r\n}\r\nexport default Answer","import React, {ChangeEvent, FC} from 'react';\r\nimport {inputType} from \"../../redux/reducers\";\r\nimport style from './input.module.css';\r\nimport Answer from \"../answer/Answer\";\r\n\r\ntype callbackType = {\r\n    changeInput: (inputId: string, currentValue: string) => void\r\n    checkCurrentValue: (inputId: string) => void\r\n    clear: (inputId: string) => void\r\n}\r\ntype state = {\r\n    state: inputType\r\n}\r\n\r\ntype props = callbackType & state\r\n\r\nconst Input: FC<props> = ({state, changeInput, checkCurrentValue, clear}) => {\r\n\r\n    const changeInputValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        changeInput(state.id, e.target.value)\r\n    }\r\n\r\n    const checkBlock =\r\n        <div className={style.answer}>\r\n            {\r\n                state.check ?\r\n                    <Answer urlPhoto={state.urlPhoto}/>\r\n                    :\r\n                <div className={style.error}>\r\n                    <span>Фууууск.. Ошибка..</span>\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    return <>\r\n        <div className={style.label}><span>Загадка от {state.label}</span></div>\r\n        <input className={style.input} type=\"text\" placeholder={'Введи код!'} value={state.currentValue} onChange={changeInputValue}/>\r\n        <div className={style.btnBlock}>\r\n            <button onClick={() => checkCurrentValue(state.id)}>Проверить код!</button>\r\n            <button onClick={() => clear(state.id)}>Зачистить поле!</button>\r\n        </div>\r\n        {\r\n            !state.touch ? null : checkBlock\r\n        }\r\n    </>\r\n}\r\nexport default Input","// https://i.ibb.co/DCnZJxr/home.jpg\r\n//     https://i.ibb.co/6J4Fn8B/mail.jpg\r\n//         https://i.ibb.co/1rxvLrW/revera.jpg\r\n//             https://i.ibb.co/h7Mv5FM/maiik.jpg\r\n//                 https://i.ibb.co/BLc5LKn/moscow.jpg\r\n//                     https://i.ibb.co/XbBVzyJ/china.jpg\r\n//                         https://i.ibb.co/rw7TpWs/winter.jpg\r\n//                             https://i.ibb.co/xD77hhM/beach.jpg\r\n//                                 https://i.ibb.co/s17MXCS/fest.jpg\r\n// https://i.ibb.co/CQpKcBH/suvlak.jpg\r\n\r\n\r\n\r\nexport const initialState = {\r\n    inputs: [\r\n        {\r\n            id: 'sherlock',\r\n            label: 'Шерлока Холмса',\r\n            currentValue: '',\r\n            checkCode: '042',\r\n            urlPhoto: 'https://i.ibb.co/rw7TpWs/winter.jpg',\r\n            check: false,\r\n            touch: false\r\n        },\r\n        {\r\n            id: 'watson',\r\n            label: 'д-р Джона Ватсона',\r\n            currentValue: '',\r\n            checkCode: '102',\r\n            urlPhoto: 'https://i.ibb.co/xD77hhM/beach.jpg',\r\n            check: false,\r\n            touch: false\r\n        },\r\n        {\r\n            id: 'hudson',\r\n            label: 'миссис Хадсон',\r\n            currentValue: '',\r\n            checkCode: '129',\r\n            urlPhoto: 'https://i.ibb.co/h7Mv5FM/maiik.jpg',\r\n            check: false,\r\n            touch: false\r\n        },\r\n        {\r\n            id: 'hooper',\r\n            label: 'Молли Хупер',\r\n            currentValue: '',\r\n            checkCode: '930',\r\n            urlPhoto: 'https://i.ibb.co/s17MXCS/fest.jpg',\r\n            check: false,\r\n            touch: false\r\n        },\r\n        {\r\n            id: 'lestrade',\r\n            label: '',\r\n            currentValue: '',\r\n            checkCode: '453',\r\n            urlPhoto: 'https://i.ibb.co/1rxvLrW/revera.jpg',\r\n            check: false,\r\n            touch: false\r\n        },\r\n        {\r\n            id: 'moriarty',\r\n            label: 'Лестрейда',\r\n            currentValue: '',\r\n            checkCode: '571',\r\n            urlPhoto: 'https://i.ibb.co/6J4Fn8B/mail.jpg',\r\n            check: false,\r\n            touch: false\r\n        },\r\n        {\r\n            id: 'adler',\r\n            label: 'Ирен Адлер',\r\n            currentValue: '',\r\n            checkCode: '443',\r\n            urlPhoto: 'https://i.ibb.co/DCnZJxr/home.jpg',\r\n            check: false,\r\n            touch: false\r\n        },\r\n        {\r\n            id: 'mary',\r\n            label: 'Мэри Морстен',\r\n            currentValue: '',\r\n            checkCode: '100',\r\n            urlPhoto: 'https://i.ibb.co/XbBVzyJ/china.jpg',\r\n            check: false,\r\n            touch: false\r\n        },\r\n        {\r\n            id: 'mycroft',\r\n            label: 'Майкрофта Холмса',\r\n            currentValue: '',\r\n            checkCode: '150',\r\n            urlPhoto: 'https://i.ibb.co/CQpKcBH/suvlak.jpg',\r\n            check: false,\r\n            touch: false\r\n        },\r\n        {\r\n            id: 'anderson',\r\n            label: 'Андерсона',\r\n            currentValue: '',\r\n            checkCode: '456',\r\n            urlPhoto: 'https://i.ibb.co/BLc5LKn/moscow.jpg',\r\n            check: false,\r\n            touch: false\r\n        },\r\n    ]\r\n}\r\n\r\ntype state = {\r\n    inputs: Array<inputType>\r\n}\r\nexport type inputType = {\r\n    id: string\r\n    label: string\r\n    currentValue: string\r\n    checkCode: string\r\n    urlPhoto: string\r\n    check: boolean\r\n    touch: boolean\r\n}\r\n\r\nexport type PropertiesType<T> = T extends { [key: string]: infer U } ? U : never\r\ntype actionsType = ReturnType<PropertiesType<typeof actions>>\r\n\r\nexport const reducer = (state: state = initialState, action: actionsType) => {\r\n    switch (action.type) {\r\n        case \"CHANGE_INPUT\":\r\n            return {\r\n                ...state,\r\n                inputs: state.inputs.map( i => {\r\n                    if (i.id === action.inputId) {\r\n                        return {...i, currentValue: action.currentValue}\r\n                    }\r\n                    return i\r\n                })\r\n            }\r\n        case \"CHECK_VERSION\":\r\n            return {\r\n                ...state,\r\n                inputs: state.inputs.map( i => {\r\n                    if (i.id === action.inputId && i.currentValue === i.checkCode) {\r\n                        return {...i, check: true, touch: true}\r\n                    } else if (i.id === action.inputId && i.currentValue !== i.checkCode) {\r\n                        return {...i, check: false, touch: true}\r\n                    }\r\n                    return i\r\n                })\r\n            }\r\n        case \"CLEAR\":\r\n            return {\r\n                ...state,\r\n                inputs: state.inputs.map( i => {\r\n                    if (i.id === action.inputId) {\r\n                        return {...i, currentValue: '', touch: false, check: false}\r\n                    }\r\n                    return i\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    changeInput: (inputId: string, currentValue: string) => ({type: 'CHANGE_INPUT', inputId, currentValue} as const),\r\n    checkCurrentValue: (inputId: string) => ({type: 'CHECK_VERSION', inputId} as const),\r\n    clear: (inputId: string) => ({type: 'CLEAR', inputId} as const)\r\n}\r\n\r\n","import React from 'react';\nimport style from'./App.module.css';\n\nimport {NavLink} from \"react-router-dom\";\nimport {Route} from 'react-router-dom';\nimport Input from \"./components/Input/Input\";\nimport {connect, ConnectedProps} from \"react-redux\";\nimport {RootStateType} from \"./redux/store\";\nimport {actions} from \"./redux/reducers\";\n\n\n\nfunction App(props: ConnectedProps<typeof connector>) {\n  return <>\n    <header>\n      <div className={style.header}>\n        <div className={style.linkBlock}><NavLink className={style.link} to={'/sherlock'}>Шерлок</NavLink></div>\n        <div className={style.linkBlock}><NavLink className={style.link} to={'/watson'}>Ватсон</NavLink></div>\n        <div className={style.linkBlock}><NavLink className={style.link} to={'/hudson'}>Миссис Хадсон</NavLink></div>\n        <div className={style.linkBlock}><NavLink className={style.link} to={'/hooper'}>Молли Хупер</NavLink></div>\n        <div className={style.linkBlock}><NavLink className={style.link} to={'/lestrade'}>Лестрейд</NavLink></div>\n        <div className={style.linkBlock}><NavLink className={style.link} to={'/moriarty'}>Мориарти</NavLink></div>\n        <div className={style.linkBlock}><NavLink className={style.link} to={'/adler'}>Ирен Адлер</NavLink></div>\n        <div className={style.linkBlock}><NavLink className={style.link} to={'/mary'}>Мэри</NavLink></div>\n        <div className={style.linkBlock}><NavLink className={style.link} to={'/mycroft'}>Майкрофт</NavLink></div>\n        <div className={style.linkBlock}><NavLink className={style.link} to={'/anderson'}>Андерсон</NavLink></div>\n      </div>\n    </header>\n<div className={style.main}>\n    <div className={style.contentWrap}>\n      <div className={style.content}>\n        <Route path={'/sherlock'} render={() => <Input state={props.sherlock} clear={props.clear} changeInput={props.changeInput} checkCurrentValue={props.checkCurrentValue}/>}/>\n      </div>\n\n      <div className={style.content}>\n        <Route path={'/watson'} render={() => <Input state={props.watson} clear={props.clear} changeInput={props.changeInput} checkCurrentValue={props.checkCurrentValue}/>}/>\n      </div>\n\n      <div className={style.content}>\n        <Route path={'/hudson'} render={() => <Input state={props.hudson} clear={props.clear} changeInput={props.changeInput} checkCurrentValue={props.checkCurrentValue}/>}/>\n      </div>\n\n      <div className={style.content}>\n        <Route path={'/hooper'} render={() => <Input state={props.hooper} clear={props.clear} changeInput={props.changeInput} checkCurrentValue={props.checkCurrentValue}/>}/>\n      </div>\n\n      <div className={style.content}>\n      <Route path={'/lestrade'} render={() => <Input state={props.lestrade} clear={props.clear} changeInput={props.changeInput} checkCurrentValue={props.checkCurrentValue}/>}/>\n      </div>\n\n      <div className={style.content}>\n      <Route path={'/moriarty'} render={() => <Input state={props.moriarty} clear={props.clear} changeInput={props.changeInput} checkCurrentValue={props.checkCurrentValue}/>}/>\n      </div>\n\n      <div className={style.content}>\n      <Route path={'/adler'} render={() => <Input state={props.adler} clear={props.clear} changeInput={props.changeInput} checkCurrentValue={props.checkCurrentValue}/>}/>\n      </div>\n\n      <div className={style.content}>\n        <Route path={'/mary'} render={() => <Input state={props.mary} clear={props.clear} changeInput={props.changeInput} checkCurrentValue={props.checkCurrentValue}/>}/>\n      </div>\n\n      <div className={style.content}>\n        <Route path={'/mycroft'} render={() => <Input state={props.mycroft} clear={props.clear} changeInput={props.changeInput} checkCurrentValue={props.checkCurrentValue}/>}/>\n      </div>\n\n      <div className={style.content}>\n        <Route path={'/anderson'} render={() => <Input state={props.anderson} clear={props.clear} changeInput={props.changeInput} checkCurrentValue={props.checkCurrentValue}/>}/>\n      </div>\n    </div>\n</div>\n  </>\n}\nconst mapStateToProps = (state: RootStateType) => {\n  return {\n    sherlock: state.page.inputs[0],\n    watson: state.page.inputs[1],\n    hudson: state.page.inputs[2],\n    hooper: state.page.inputs[3],\n    lestrade: state.page.inputs[4],\n    moriarty: state.page.inputs[5],\n    adler: state.page.inputs[6],\n    mary: state.page.inputs[7],\n    mycroft: state.page.inputs[8],\n    anderson: state.page.inputs[9],\n  }\n}\nconst mapDispatchToProps = {\n  changeInput: actions.changeInput,\n  checkCurrentValue:actions.checkCurrentValue,\n  clear: actions.clear\n}\n\nconst connector = connect(mapStateToProps, mapDispatchToProps)\n\nexport default connector(App);\n","import {combineReducers, createStore} from \"redux\";\r\nimport {reducer} from \"./reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n    page: reducer\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from \"./redux/store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}